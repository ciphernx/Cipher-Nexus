syntax = "proto3";

package cipher.nexus.node;

// Node service definition
service NodeService {
  // Join the network
  rpc Join (JoinRequest) returns (JoinResponse);
  
  // Send heartbeat
  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse);
  
  // Send alert
  rpc SendAlert (AlertRequest) returns (AlertResponse);
  
  // Send zone
  rpc SendZone (ZoneRequest) returns (ZoneResponse);
}

// Request message for joining the network
message JoinRequest {
  string node_id = 1;
  string address = 2;
  repeated string capabilities = 3;
}

// Response message for join request
message JoinResponse {
  bool success = 1;
  string message = 2;
  repeated string peer_addresses = 3;
}

// Request message for heartbeat
message HeartbeatRequest {
  string node_id = 1;
  int64 timestamp = 2;
  map<string, double> metrics = 3;
}

// Response message for heartbeat
message HeartbeatResponse {
  bool success = 1;
  string message = 2;
}

// Request message for sending alert
message AlertRequest {
  string alert_id = 1;
  string node_id = 2;
  int64 timestamp = 3;
  string severity = 4;
  string description = 5;
  map<string, string> metadata = 6;
}

// Response message for alert
message AlertResponse {
  bool success = 1;
  string message = 2;
}

// Request message for sending zone
message ZoneRequest {
  string zone_id = 1;
  string node_id = 2;
  repeated string rules = 3;
  map<string, string> configuration = 4;
}

// Response message for zone
message ZoneResponse {
  bool success = 1;
  string message = 2;
} 